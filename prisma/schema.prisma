// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  
  @@map("admin_users")
}

model Announcement {
  id        String   @id @default(cuid())
  title     String
  content   String
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@map("announcements")
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  startDate   DateTime @map("start_date")
  endDate     DateTime? @map("end_date")
  location    String?
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  @@map("events")
}

model Page {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  content   String
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@map("pages")
}

model MarketplacePost {
  id              String   @id @default(cuid())
  title           String
  description     String
  category        String
  type            String   // "sell", "buy", "trade"
  price           Float?
  authorName      String   @map("author_name")
  authorEmail     String   @map("author_email")
  authorPhone     String?  @map("author_phone")
  isSold          Boolean  @default(false) @map("is_sold")
  isActive        Boolean  @default(true) @map("is_active")
  images          String?  // JSON array of image URLs
  recaptchaToken  String?  @map("recaptcha_token")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  replies         MarketplaceReply[]
  
  @@map("marketplace_posts")
}

model MarketplaceReply {
  id             String   @id @default(cuid())
  content        String
  authorName     String   @map("author_name")
  authorEmail    String   @map("author_email")
  authorPhone    String?  @map("author_phone")
  postId         String   @map("post_id")
  images         String?  // JSON array of image URLs
  recaptchaToken String?  @map("recaptcha_token")
  createdAt      DateTime @default(now()) @map("created_at")
  
  post           MarketplacePost @relation(fields: [postId], references: [id], onDelete: Cascade)
  
  @@map("marketplace_replies")
}
